"[\n    {\n        \"model\": \"reference_data_app.showreferenceinfo\",\n        \"pk\": 1,\n        \"fields\": {\n            \"name\": \"Bulbulay\",\n            \"description\": \"\",\n            \"is_active\": true,\n            \"effective_date\": \"2019-07-08T12:48:59.592Z\",\n            \"expiration_date\": null,\n            \"added_by\": [\n                \"bilgrami\"\n            ],\n            \"created\": \"2019-07-08T07:23:10Z\",\n            \"updated\": \"2019-07-08T12:48:59.592Z\",\n            \"extra_data\": \"[('cast', [<Person id:6420835[http] name:_Zafar, Nabeel_>, <Person id:2588481[http] name:_Aslam, Mehmood_>, <Person id:6905894[http] name:_Dilpazir, Hina_>, <Person id:3219800[http] name:_Omar, Ayesha_>, <Person id:8499106[http] name:_Akmal, Khawaja_>, <Person id:8499107[http] name:_Hassan, Sheeraz_>, <Person id:1480563[http] name:_Aslam, Aijaz_>, <Person id:8499104[http] name:_Nadeem, Fatima_>, <Person id:8499105[http] name:_Rizwan, Nyle_>, <Person id:8499109[http] name:_David, Binita_>, <Person id:8499108[http] name:_Khawaja, Shahid_>]), ('genres', ['Adventure', 'Comedy', 'Family']), ('runtimes', ['25']), ('countries', ['Pakistan']), ('country codes', ['pk']), ('language codes', ['ur']), ('color info', ['Color']), ('number of seasons', 10), ('rating', 7.9), ('votes', 220), ('cover url', 'https://m.media-amazon.com/images/M/MV5BOGI3ZjE3NTItNDg5Zi00YzE5LWIzMzQtNGMyYmJjNzE0MWY5XkEyXkFqcGdeQXVyMzc0NzU5MTc@._V1_SY150_CR39,0,101,150_.jpg'), ('plot outline', 'The whole series revolve around four main characters(Nabeel,Mehmood,Mumtaz(momo) and Khoobsurat).Both men are jobless and too lazy.Their wives are obsessed with their behaviour.In every episode,they find themselves in a new trouble and try to deal with it in their own way.'), ('languages', ['Urdu']), ('title', 'Bulbulay'), ('year', 2009), ('kind', 'tv series'), ('series years', '2009-'), ('akas', ['Bulbulay (Pakistan)']), ('seasons', 10), ('writer', [<Person id:6905895[http] name:_Imran, Ali_>]), ('production companies', [<Company id:0507764[http] name:_MIF Productions_>]), ('distributors', [<Company id:0254887[http] name:_ARY Digital_>]), ('plot', [\\\"'Bulbulay' is a sitcom that revolves around a family of four. In each episode Momo, Nabeel, Khoobsurat and Mehmood Sahib, find themselves in a new situation every time and deal with the consequences in their own unique manner.::ARY Digital\\\", 'The whole series revolve around four main characters(Nabeel,Mehmood,Mumtaz(momo) and Khoobsurat).Both men are jobless and too lazy.Their wives are obsessed with their behaviour.In every episode,they find themselves in a new trouble and try to deal with it in their own way.::harryer-90762']), ('canonical title', 'Bulbulay'), ('long imdb title', '\\\"Bulbulay\\\" (2009)'), ('long imdb canonical title', '\\\"Bulbulay\\\" (2009)'), ('smart canonical title', 'Bulbulay'), ('smart long imdb canonical title', '\\\"Bulbulay\\\" (2009)'), ('full-size cover url', 'https://m.media-amazon.com/images/M/MV5BOGI3ZjE3NTItNDg5Zi00YzE5LWIzMzQtNGMyYmJjNzE0MWY5XkEyXkFqcGdeQXVyMzc0NzU5MTc@.jpg')]\",\n            \"source_type\": 1,\n            \"show\": 47,\n            \"reference_key\": \"4191600\",\n            \"number_of_seasons\": 10,\n            \"cover_url\": \"('https://m.media-amazon.com/images/M/MV5BOGI3ZjE3NTItNDg5Zi00YzE5LWIzMzQtNGMyYmJjNzE0MWY5XkEyXkFqcGdeQXVyMzc0NzU5MTc@._V1_SY150_CR39,0,101,150_.jpg',)\",\n            \"full_size_cover_url\": \"https://m.media-amazon.com/images/M/MV5BOGI3ZjE3NTItNDg5Zi00YzE5LWIzMzQtNGMyYmJjNzE0MWY5XkEyXkFqcGdeQXVyMzc0NzU5MTc@.jpg\",\n            \"cast\": [\n                {\n                    \"cast\": \"[<Person id:6420835[http] name:_Zafar, Nabeel_>, <Person id:2588481[http] name:_Aslam, Mehmood_>, <Person id:6905894[http] name:_Dilpazir, Hina_>, <Person id:3219800[http] name:_Omar, Ayesha_>, <Person id:8499106[http] name:_Akmal, Khawaja_>, <Person id:8499107[http] name:_Hassan, Sheeraz_>, <Person id:1480563[http] name:_Aslam, Aijaz_>, <Person id:8499104[http] name:_Nadeem, Fatima_>, <Person id:8499105[http] name:_Rizwan, Nyle_>, <Person id:8499109[http] name:_David, Binita_>, <Person id:8499108[http] name:_Khawaja, Shahid_>]\"\n                }\n            ]\n        }\n    },\n    {\n        \"model\": \"reference_data_app.showreferenceinfo\",\n        \"pk\": 2,\n        \"fields\": {\n            \"name\": \"Alif Allah Aur Insaan\",\n            \"description\": \"\",\n            \"is_active\": true,\n            \"effective_date\": \"2019-07-08T12:50:21.062Z\",\n            \"expiration_date\": null,\n            \"added_by\": [\n                \"bilgrami\"\n            ],\n            \"created\": \"2019-07-08T12:03:58Z\",\n            \"updated\": \"2019-07-08T12:50:21.062Z\",\n            \"extra_data\": \"[('cast', [<Person id:9106813[http] name:_Imran, Anas Ali_>, <Person id:9542836[http] name:_Ibrahim, Rayyan_>, <Person id:8207540[http] name:_Hasan, Noor ul_>, <Person id:4749168[http] name:_Khan, Naima_>, <Person id:3882790[http] name:_Malik, Kinza_>, <Person id:7480253[http] name:_Mansoor, Azra_>, <Person id:0670325[http] name:_Peerzada, Usmaan_>, <Person id:7175563[http] name:_Ashraf, Imran_>, <Person id:6567542[http] name:_Khan, Kubra_>, <Person id:6358322[http] name:_Shah, Ushna_>, <Person id:5685394[http] name:_Sheikh, Shehzad_>, <Person id:2671989[http] name:_Zulfiqar, Mikaal_>]), ('genres', ['Drama', 'Romance']), ('countries', ['Pakistan']), ('country codes', ['pk']), ('language codes', ['ur']), ('color info', ['Color']), ('number of seasons', 1), ('rating', 8.4), ('votes', 91), ('cover url', 'https://m.media-amazon.com/images/M/MV5BNmMyNGFkZmYtZDIwNi00ODQ3LWIyMTAtZDVhZjgxZDAzYjlkXkEyXkFqcGdeQXVyNDI2NjExNDA@._V1_SY150_CR9,0,101,150_.jpg'), ('plot outline', 'Alif Allah Aur Ainsaan is a set of different stories connected with each other. The title refers to the Arabic letter Alif, which the letter that begins both of the words Allah (Arabic word for God) and Ainsaan (the Arabic word for human).The story is about the relationship of God with humans as well as about how different are the humans from each other.'), ('languages', ['Urdu']), ('title', 'Alif Allah Aur Insaan'), ('year', 2017), ('kind', 'tv series'), ('series years', '2017-'), ('akas', ['Alif Allah Aur Insaan (Pakistan)']), ('seasons', 1), ('writer', [<Person id:9001712[http] name:_Hayat, Qaisara_>]), ('production companies', [<Company id:0481245[http] name:_MD productions_>]), ('plot', ['Story of trust, relationships and regrets, revolving around five people with different backgrounds and their faith and conviction. It highlights the concept of how the creator rewards the people who believe in hard work and patience.::M.S', 'Alif Allah Aur Ainsaan is a set of different stories connected with each other. The title refers to the Arabic letter Alif, which the letter that begins both of the words Allah (Arabic word for God) and Ainsaan (the Arabic word for human).The story is about the relationship of God with humans as well as about how different are the humans from each other.::vipasif-1', \\\"Alif Allah Aur Insaan is the story of trust and relationships, story revolves around five people from five totally different backgrounds and their faith and conviction. It highlights the concept of how the creator rewards the people who believe in hard work and patience. It depicts the story of a young landlord Shahzeb who once saw Nazneen Malik on her sisters wedding and fell in love with her, similarly Nazneen happens to be the spoilt child of her rich father Hashmat Malik. On the same wedding, Nazneen insults Shamu and his fellows for being Transgenders after which Shammu curses her that one day she will lose all her fate. Simultaneously Basit happens to be son of Malik's most respected workers/servants. On the other hand, Story depicts the life of Rani a street beggar who is forced to beg and bring money to her father, she believes in Human equality and saved Shamu from mocking goons which left him in love with her. One day Rani comes across a beautiful place where a florist tells her about the beauty and fate of the towns well known woman 'Nigar Begum', this fascinates Rani who constantly prays to be like her one day. It is revealed that Nigar begum is a head courtesan who shelters homeless girls in her brothel to work for her, it is also revealed in flashbacks that Shahzeb was once forced by his friends to see Nigar Begum's Mujra dance. Despite going there on his friend's consent, Shahzeb was least interested and remained decent which made Negar falling in love with him, but he rejects her love and insults after which a heartbroken Nigar curses him that one day he will be rejected by the same way he rejected her. Story takes turn when Rani escapes her house and asks Nigar to keep her as her maid, keeping in mind that once she has arrived she can never go back. Shamu decides to works with necessity and becomes a well known beautician. Nazneen on the other hand falls in love with Basit where as Shahzeb is constantly told by a moulvi to never prioritise his love over religion. Simultaneously Rani (now known as Reena) regrets to leave her house. Shamu helps her to escape Nigar's brothel and she realises that God has given her chance to escape, but she still decides to fulfil her dreams.::M.S\\\"]), ('canonical title', 'Alif Allah Aur Insaan'), ('long imdb title', '\\\"Alif Allah Aur Insaan\\\" (2017)'), ('long imdb canonical title', '\\\"Alif Allah Aur Insaan\\\" (2017)'), ('smart canonical title', 'Alif Allah Aur Insaan'), ('smart long imdb canonical title', '\\\"Alif Allah Aur Insaan\\\" (2017)'), ('full-size cover url', 'https://m.media-amazon.com/images/M/MV5BNmMyNGFkZmYtZDIwNi00ODQ3LWIyMTAtZDVhZjgxZDAzYjlkXkEyXkFqcGdeQXVyNDI2NjExNDA@.jpg')]\",\n            \"source_type\": 1,\n            \"show\": 46,\n            \"reference_key\": \"6904166\",\n            \"number_of_seasons\": 1,\n            \"cover_url\": \"('https://m.media-amazon.com/images/M/MV5BNmMyNGFkZmYtZDIwNi00ODQ3LWIyMTAtZDVhZjgxZDAzYjlkXkEyXkFqcGdeQXVyNDI2NjExNDA@._V1_SY150_CR9,0,101,150_.jpg',)\",\n            \"full_size_cover_url\": \"https://m.media-amazon.com/images/M/MV5BNmMyNGFkZmYtZDIwNi00ODQ3LWIyMTAtZDVhZjgxZDAzYjlkXkEyXkFqcGdeQXVyNDI2NjExNDA@.jpg\",\n            \"cast\": [\n                {\n                    \"cast\": \"[<Person id:9106813[http] name:_Imran, Anas Ali_>, <Person id:9542836[http] name:_Ibrahim, Rayyan_>, <Person id:8207540[http] name:_Hasan, Noor ul_>, <Person id:4749168[http] name:_Khan, Naima_>, <Person id:3882790[http] name:_Malik, Kinza_>, <Person id:7480253[http] name:_Mansoor, Azra_>, <Person id:0670325[http] name:_Peerzada, Usmaan_>, <Person id:7175563[http] name:_Ashraf, Imran_>, <Person id:6567542[http] name:_Khan, Kubra_>, <Person id:6358322[http] name:_Shah, Ushna_>, <Person id:5685394[http] name:_Sheikh, Shehzad_>, <Person id:2671989[http] name:_Zulfiqar, Mikaal_>]\"\n                }\n            ]\n        }\n    }\n]\n":1iry0Q:JvJgTml-Gd0Rp1nj0jn0l39I5z8