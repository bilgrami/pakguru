# Generated by Django 2.2.3 on 2019-07-03 02:05

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import pakguru_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='CountryList',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Country Name')),
                ('short_name', models.CharField(max_length=10, verbose_name='Short Name')),
                ('capital_city', models.CharField(max_length=100, verbose_name='Capital')),
                ('country_phone_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Country Phone Code')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='LocaleList',
            fields=[
                ('locale_id', models.AutoField(primary_key=True, serialize=False)),
                ('locale_code', models.CharField(default='en-US', max_length=6)),
                ('language', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Locales',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Post Id')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL Slug')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='Publish Date')),
                ('target_date', models.DateField(db_index=True, verbose_name='Target Date')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('post_author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Author')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Source')),
                ('source_detail', models.TextField(blank=True, null=True, verbose_name='Source Detail')),
                ('media_type', models.CharField(choices=[('TEXT', 'Text'), ('IMAGE', 'Image'), ('VIDEO', 'Video'), ('PODCAST', 'Podcast'), ('EMBEDDED_VIDEO', 'embedded video'), ('DOCUMENT', 'Document')], default='text', max_length=50, verbose_name='Media Type')),
                ('weekday_name', models.CharField(choices=[('SUN', 'Sunday'), ('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday')], max_length=3, verbose_name='Weekday')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Tags'), size=None)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('flagged', models.BooleanField(db_index=True, default=False, verbose_name='Is Flagged')),
                ('flagged_data', models.TextField(blank=True, null=True, verbose_name='Flagged Data')),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created On')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_Show', models.BooleanField(default=True, verbose_name='Is Show')),
                ('is_Joke', models.BooleanField(default=False, verbose_name='Is Joke')),
                ('is_Quote', models.BooleanField(default=False, verbose_name='Is Quote')),
                ('is_Politics', models.BooleanField(default=False, verbose_name='Is Politics')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_posts', to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('shows', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PostCategoryList',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Post Category',
                'verbose_name_plural': 'Post Categories',
            },
        ),
        migrations.CreateModel(
            name='ShowChannel',
            fields=[
                ('channel_id', models.AutoField(primary_key=True, serialize=False)),
                ('channel_short_code', models.CharField(db_index=True, max_length=20, verbose_name='Channel Code')),
                ('channel_name', models.CharField(max_length=300, verbose_name='Channel Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('website_link', models.URLField(blank=True, max_length=500, null=True, verbose_name='Website')),
                ('youtube_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Youtube')),
                ('facebook_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Facebook')),
                ('twitter_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Twitter')),
                ('instagram_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Instagram')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_tvchannel', to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_show_channels', to='pakguru_app.CountryList')),
            ],
            options={
                'verbose_name': 'Show Channel',
                'verbose_name_plural': 'Show Channels',
            },
        ),
        migrations.CreateModel(
            name='ShowSourceFeed',
            fields=[
                ('feed_id', models.AutoField(primary_key=True, serialize=False)),
                ('feed_name', models.CharField(db_index=True, max_length=300, verbose_name='Feed Name')),
                ('show_name', models.CharField(db_index=True, max_length=300, verbose_name='Show Name')),
                ('playlist_link', models.URLField(max_length=500, verbose_name='Playlist Link')),
                ('latest_show_link', models.URLField(blank=True, max_length=500, null=True, verbose_name='Latest Show Link')),
                ('title_example', models.CharField(blank=True, max_length=500, null=True, verbose_name='Title Example')),
                ('title_search_pattern', models.CharField(blank=True, max_length=500, null=True, verbose_name='Title Search Pattern')),
                ('search_api_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='Search URL')),
                ('search_api_pattern', models.CharField(blank=True, max_length=500, null=True, verbose_name='Search Pattern')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
                ('effective_date', models.DateTimeField(auto_now=True, verbose_name='Effective Date')),
                ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name='Expiration Date')),
                ('feed_source', models.CharField(blank=True, choices=[('YOUTUBE', 'Youtube'), ('TALK_SHOWS_CENTRAL', 'Talk Shows Central'), ('UNEWSTV', 'unewstv'), ('FACEBOOK', 'Facebook'), ('PODCAST', 'Podcast'), ('VIMEO', 'Vimeo'), ('TWITTER', 'Twitter'), ('OTHER', 'Other')], max_length=20, null=True, verbose_name='Feed Source')),
                ('feed_quality', models.CharField(blank=True, choices=[('320p', '320p'), ('480p', '480p'), ('720p', '720p'), ('1080p', '1080p'), ('HD', 'HD'), ('4K', '4K'), ('8K', '8K')], max_length=20, null=True, verbose_name='Max Feed Quality')),
                ('priority', models.SmallIntegerField(default=0, verbose_name='Priority')),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_tvfeed', to=settings.AUTH_USER_MODEL)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pakguru_app.ShowChannel')),
                ('country', models.ManyToManyField(blank=True, db_index=True, to='pakguru_app.CountryList')),
            ],
            options={
                'verbose_name_plural': 'Show Source Feeds',
            },
        ),
        migrations.CreateModel(
            name='ShowFeed_HarvestJobLog',
            fields=[
                ('job_id', models.AutoField(primary_key=True, serialize=False)),
                ('latest_feed_date', models.DateField(db_index=True, verbose_name='Latest Feed Date')),
                ('is_latest', models.BooleanField(db_index=True, default=True, verbose_name='Is Latest')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('feed_data', models.FileField(blank=True, null=True, upload_to=pakguru_app.models.data_file_directory_path)),
                ('job_status', models.CharField(choices=[('NOT STARTED', 'Not Started'), ('IN PROGRESS', 'In Progress'), ('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PAUSED', 'Paused'), ('CANCELLED', 'Cancelled')], default='NOT STARTED', max_length=20, verbose_name='Job Status')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional Notes')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_harvestjobs', to=settings.AUTH_USER_MODEL)),
                ('feed_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pakguru_app.ShowSourceFeed')),
            ],
            options={
                'verbose_name': 'Feed Harvest Job',
                'verbose_name_plural': 'Feed Harvest Jobs',
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('show_id', models.AutoField(primary_key=True, serialize=False)),
                ('show_name', models.CharField(db_index=True, max_length=300, verbose_name='Show Name')),
                ('host_name', models.CharField(max_length=300, verbose_name='Host Name')),
                ('airtime', models.CharField(blank=True, max_length=300, null=True, verbose_name='Air Time')),
                ('website_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Website')),
                ('youtube_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Youtube')),
                ('facebook_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Facebook')),
                ('twitter_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Twitter')),
                ('instagram_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Instagram')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
                ('effective_date', models.DateTimeField(auto_now=True, verbose_name='Effective Date')),
                ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name='Expiration Date')),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_youtube_shows', to=settings.AUTH_USER_MODEL)),
                ('additional_feeds', models.ManyToManyField(blank=True, related_name='related_shows', to='pakguru_app.ShowSourceFeed')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_tvshow', to='pakguru_app.PostCategoryList')),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pakguru_app.ShowChannel')),
                ('country', models.ManyToManyField(blank=True, to='pakguru_app.CountryList')),
                ('locale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pakguru_app.LocaleList')),
                ('primary_feed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_primary_shows', to='pakguru_app.ShowSourceFeed')),
            ],
            options={
                'verbose_name_plural': 'Shows',
            },
        ),
        migrations.CreateModel(
            name='PostStatistic',
            fields=[
                ('post_stat_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Post Stat Id')),
                ('total_views', models.IntegerField(default=0, verbose_name='Total Views')),
                ('up_votes', models.IntegerField(default=0, verbose_name='Up')),
                ('down_votes', models.IntegerField(default=0, verbose_name='Down')),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created On')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_stats', to='pakguru_app.Post')),
            ],
            options={
                'verbose_name_plural': 'Post Stats',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_posts', to='pakguru_app.PostCategoryList'),
        ),
        migrations.AddField(
            model_name='post',
            name='country',
            field=models.ManyToManyField(blank=True, to='pakguru_app.CountryList'),
        ),
        migrations.AddField(
            model_name='post',
            name='locale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pakguru_app.LocaleList'),
        ),
        migrations.AddField(
            model_name='post',
            name='show',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pakguru_app.Show'),
        ),
    ]
